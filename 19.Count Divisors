Question:
Given an integer N, find the number of divisors of N that are divisible by 3.

Solution:
class Solution
{
	public:
		int count_divisors(int n)
		{
         //Code here.
         int count = 0;
    for (int i = 1; i * i <= n; i++) {
        if (n % i == 0) {
            if (i % 3 == 0) {
                count++;
            }
            if (i != n / i && (n / i) % 3 == 0) {
                count++;
            }
        }
    }
    return count;
		}
};

Explaination:
* Initialize a variable to store the count of divisors divisible by 3
* Iterate from 1 up to the square root of n
* Check if i is a divisor of n
* If i is divisible by 3, increment the count
* If i is not equal to n/i and n/i is divisible by 3, increment the count
* Return the count of divisors divisible by 3
